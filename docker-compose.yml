services:
  postgres:
    image: postgres:17.4
    container_name: postgres
    env_file:
      - .env
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - default
  
  mongodb:
    image: mongo:8.0
    container_name: mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_ROOT_PASSWORD}
    networks:
      - default

  redis:
    image: redis:8.0.0
    container_name: redis
    command: redis-server --requirepass ${REDIS_PASSWORD}
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - default

  mailpit:
    image: axllent/mailpit:v1.24
    container_name: mailpit
    ports:
      - "8025:8025"
      - "1025:1025"
    networks:
      - default

  vue-build:
    image: node:22.16-bullseye
    container_name: vue-build
    working_dir: /code/client
    volumes:
      - ./client:/code/client
      - ./client/dist:/code/client/dist
    command: |
      sh -c "npm install -g pnpm && pnpm install && pnpm run build"
    depends_on:
      - web
  
  web:
    build: .
    container_name: django_web
    command: >
      sh -c "python manage.py makemigrations --noinput &&
            python manage.py migrate --noinput &&
            python manage.py collectstatic --noinput &&
            gunicorn config.wsgi:application --bind 0.0.0.0:8000"
    volumes:
      - .:/code
    expose:
      - "8000"
    depends_on:
      - postgres
      - redis
      - mongodb
    env_file:
      - .env
    environment:
      - DEBUG=0
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
    networks:
      - default

  rq_worker: 
    build: .
    container_name: redis_rq_worker
    command: python manage.py rqworker default 
    volumes:
      - .:/code
    depends_on:
      - web 
      - redis 
    env_file:
      - .env
    environment:
      - DEBUG=1
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
    networks:
      - default

  rq_scheduler:
    build: .
    container_name: redis_rq_scheduler
    command: python manage.py rqscheduler 
    volumes:
      - .:/code
    depends_on:
      - web 
      - redis 
    env_file:
      - .env
    environment:
      - DEBUG=1
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
    networks:
      - default

  nginx:
    image: nginx:1.27.5-alpine
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./staticfiles:/code/staticfiles:ro
      - ./client/dist:/code/client/dist:ro     
    depends_on:
      - web
      - vue-build
    networks:
      - default

networks:
  default:
    driver: bridge

volumes:
  postgres_data:
  mongodb_data:
  redis_data: